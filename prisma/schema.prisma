generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model course {
  crseCode  String   @id @map("crse_code") @db.VarChar(5)
  crseName  String   @map("crse_name") @db.VarChar(100)
  offeredBy String   @map("offered_by") @db.VarChar(5)
  crseFee   Decimal  @map("crse_fee") @db.Decimal(7, 2)
  labFee    Decimal? @map("lab_fee") @db.Decimal(7, 2)

  department department @relation(name: "courseToDepartment", fields: [offeredBy], references: [deptCode], onDelete: NoAction, onUpdate: NoAction, map: "fk_course_offered_by")
  students   student[]  @relation("courseToStudent")
}

model department {
  deptCode         String    @id @map("dept_code") @db.VarChar(5)
  deptName         String    @map("dept_name") @db.VarChar(100)
  hod              String    @db.Char(4)
  noOfStaff        Int?      @map("no_of_staff")
  maxStaffStrength Int?      @map("max_staff_strength")
  budget           Decimal?  @db.Decimal(9, 2)
  expenditure      Decimal?  @db.Decimal(9, 2)
  hodApptDate      DateTime? @map("hod_appt_date") @db.Date

  courses course[] @relation("courseToDepartment")
  staffs  staff[]  @relation("departmentToStaff")
}

model staff {
  staffNo           String   @id @map("staff_no") @db.Char(4)
  staffName         String   @map("staff_name") @db.VarChar(100)
  supervisorStaffNo String?  @map("supervisor_staff_no") @db.Char(4)
  dob               DateTime @db.Date
  grade             String   @db.VarChar(5)
  maritalStatus     String   @map("marital_status") @db.VarChar(1)
  pay               Decimal? @db.Decimal(7, 2)
  allowance         Decimal? @db.Decimal(7, 2)
  hourlyRate        Decimal? @map("hourly_rate") @db.Decimal(7, 2)
  gender            String   @db.Char(1)
  citizenship       String   @db.VarChar(10)
  joinYr            Int      @map("join_yr")
  deptCode          String   @map("dept_code") @db.VarChar(5)
  typeOfEmployment  String   @map("type_of_employment") @db.VarChar(2)
  highestQln        String   @map("highest_qln") @db.VarChar(10)
  designation       String   @db.VarChar(20)

  department department @relation("departmentToStaff", fields: [deptCode], references: [deptCode])
  dependents staff_dependent[]
  coordinatedModules module[] @relation("ModuleCoordinator")


}

model staffBackup {
  staffNo          String   @id @map("staff_no") @db.Char(4)
  staffName        String   @map("staff_name") @db.VarChar(100)
  supervisor       String?  @db.Char(4)
  dob              DateTime @db.Date
  grade            String   @db.VarChar(5)
  maritalStatus    String   @map("marital_status") @db.VarChar(1)
  pay              Decimal? @db.Decimal(7, 2)
  allowance        Decimal? @db.Decimal(7, 2)
  hourlyRate       Decimal? @map("hourly_rate") @db.Decimal(7, 2)
  gender           String   @db.Char(1)
  citizenship      String   @db.VarChar(10)
  joinYr           Int      @map("join_yr")
  deptCode         String   @map("dept_code") @db.VarChar(5)
  typeOfEmployment String   @map("type_of_employment") @db.VarChar(2)
  highestQln       String   @map("highest_qln") @db.VarChar(10)
  designation      String   @db.VarChar(20)

  @@map("staff_backup")
}

model userAccount {
  id        Int    @id
  accountNo String @map("account_no") @db.VarChar(6)
  role      Int
  password  String @db.VarChar(255)

  @@map("user_account")
}

model userRole {
  id   Int    @id
  name String @db.VarChar(25)

  @@map("user_role")
}

model module {
  modCode    String  @id @map("mod_code") @db.VarChar(10)
  modName    String  @map("mod_name") @db.VarChar(100)
  creditUnit Int     @map("credit_unit")
  modCoord   String? @map("mod_coord") @db.Char(4)

  coordinator        staff?           @relation("ModuleCoordinator", fields: [modCoord], references: [staffNo], onDelete: NoAction, onUpdate: NoAction, map: "mod_mod_coord_fk")
  prerequisites      pre_requisite[]  @relation("preRequisiteModCodeToModule")
  requiredByModules  pre_requisite[]  @relation("preRequisiteRequisiteToModule")
  performances stud_mod_performance[]


  @@map("module")
}



model staff_dependent {
  staffNo      String   @map("staff_no") @db.Char(4)
  depName      String   @map("dep_name") @db.VarChar(100)
  relationship String   @db.VarChar(20)
  birthDate    DateTime @map("birth_date") @db.Date

  staff staff @relation(fields: [staffNo], references: [staffNo], onDelete: NoAction, onUpdate: NoAction, map: "staff_dependent_staff_no_fk")

  @@id([staffNo, depName])
  @@map("staff_dependent")
}


model student {
  studentNo   String   @id @map("student_no") @db.Char(6)
  studentName String   @map("student_name") @db.VarChar(100)
  gender      String   @db.Char(1)
  dob         DateTime @db.Date
  countryId   Int      @map("country_id")
  courseCode  String   @map("course_code") @db.VarChar(5)

  country country @relation("countryToStudent", fields: [countryId], references: [id])
  course  course  @relation("courseToStudent", fields: [courseCode], references: [crseCode])
  performances stud_mod_performance[]


  @@map("student")
}

model country {
  id       Int       @id
  name     String    @db.VarChar(50)
  students student[] @relation("countryToStudent")

  @@map("country")
}


model pre_requisite {
  modCode   String @map("mod_code") @db.VarChar(10)
  requisite String @db.VarChar(10)

  module         module @relation("preRequisiteModCodeToModule", fields: [modCode], references: [modCode], onDelete: NoAction, onUpdate: NoAction, map: "pre_requisite_mod_code_fk")
  requiredModule module @relation("preRequisiteRequisiteToModule", fields: [requisite], references: [modCode], onDelete: NoAction, onUpdate: NoAction, map: "pre_requisite_requisite_fk")

  @@id([modCode, requisite])
  @@map("pre_requisite")
}

model stud_mod_performance {
  studId  String  @map("stud_id") @db.Char(6)
  modCode String  @map("mod_code") @db.VarChar(10)
  grade   String? @db.Char(1)

  student student @relation(fields: [studId], references: [studentNo], onDelete: NoAction, onUpdate: NoAction, map: "smp_stud_id_fk")
  module  module  @relation(fields: [modCode], references: [modCode], onDelete: NoAction, onUpdate: NoAction, map: "smp_mod_code_fk")

  @@id([studId, modCode])
  @@map("stud_mod_performance")
}

